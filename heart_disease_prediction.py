# -*- coding: utf-8 -*-
"""Heart Disease Prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1blflOIvxbT8P8araZjTn1NxJDNkhTv97

importing the libraries
"""

import numpy as np
import pandas as pd
from sklearn.metrics import accuracy_score
from sklearn.model_selection import train_test_split
import matplotlib.pyplot 
from sklearn.linear_model import LogisticRegression

"""Data collection and preprocessing"""

#Load data 
heart_data = pd.read_csv('/content/heart_disease_data.csv')

heart_data.head()

heart_data.shape

heart_data.describe()

heart_data.isnull().sum()

heart_data['target'].value_counts()

#Split data
X = heart_data.drop(columns='target',axis  = 1)
Y = heart_data['target']

#Split train and test
X_train,X_test,Y_train,Y_test = train_test_split(X,Y,test_size=0.2,stratify=Y,random_state=2)
print(X.shape,X_train.shape,X_test.shape)

"""Model Training - Logistic Regression"""

model = LogisticRegression()

model.fit(X_train,Y_train)

"""Model Evaluation"""

#training accuracy 
X_train_prediction = model.predict(X_train)
X_train_score = accuracy_score(X_train_prediction,Y_train)
print("Training accuracy : ",X_train_score)

#testing accuracy 
X_test_prediction = model.predict(X_test)
X_test_score = accuracy_score(X_test_prediction,Y_test)
print("Testing accuracy : ",X_test_score)

"""Predictive system"""

input_data = (38,1,2,138,175,0,1,173,0,0,2,4,2)
#38,1,2,138,175,0,1,173,0,0,2,4,2,1
#38,1,2,138,175,0,1,173,0,0,2,4,2,1
#67,1,0,160,286,0,0,108,1,1.5,1,3,2,0
#67,1,0,120,229,0,0,129,1,2.6,1,2,3,0
input_np = np.asarray(input_data)
input_np_re = input_np.reshape(1,-1)
pred = model.predict(input_np_re)
if(pred[0] == 1):
  print("Danger :(")
else:
  print("Chill :)")

